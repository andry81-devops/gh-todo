* Implement push-pull retry loop to make a git repo push from different
  workflow pipelines.

  for:

    /gh-action--*
    /gh-workflow

* Implement a github repo statistic push from different repos into a single git
  repo to avoid github repositories page overrun by the automated user commits
  (page updates each time a commit is made).

  for:

    /github-accum-stats
    /gh-action--*
    /gh-workflow

* Implement a repository release downloads accumulator.

    for:

      /github-accum-stats
      /gh-action--accum-repo-release-downloads
      /gh-workflow

* Implement a repository subscribers accumulator.

    for:

      /github-accum-stats
      /gh-action--accum-repo-subscribers
      /gh-workflow

* Implement a repository stargazers accumulator.

    for:

      /github-accum-stats
      /gh-action--accum-repo-stargazers
      /gh-workflow

* Implement an account followers accumulator.

    for:

      /github-accum-stats
      /gh-action--accum-account-followers
      /gh-workflow

* Implement a new tag watcher GitHub action experimental script to watch an
  arbitrary git repository for a tag creation by a name pattern and does
  reflect it as a release tag creation in another git repository to be able to
  notify the owner about each tag creation.
  Can be used for repositories where the owner does not make release but
  instead does make tags.

* Implement a repository events accumulator.

    for:

      /github-accum-stats
      /gh-action--accum-repo-events
      /gh-workflow

* Implement per date commit message to indicate particular statistic for a date
  in a file or directory. For example, the `by_year` directory does contain
  files in format `YYYY-MM-DD.json`. Each that file can be committed separately
  with different commit message to indicate different accumulation statistic
  segmented by date.

    for:

      /gh-workflow

* Implement a repository commits accumulator.

    for:

      /github-accum-stats
      /gh-action--accum-repo-commits
      /gh-workflow

* Implement github links patch by pattern before the
  `$GH_WORKFLOW_ROOT/bash/github/flush-print-annotations.sh`
  script if a commit at the end is executed and succeeded to replace
  all generic links like
  `https://github.com/{{OWNER}}/{{REPO}}/tree/master/...` by
  `https://github.com/{{OWNER}}/{{REPO}}/tree/{{COMMIT_HASH}}/...`.

* Implement a repository links accumulator and checker.
  Schedule iteration over repos and files, extract web links by patterns,
  accumulate repo/file/link paths, check links and accumulate responce.

    for:

      /accum-url-links
      /check-url-links
      /gh-action--accum-url-links
      /gh-action--check-url-links
      /gh-workflow

* Implement a repository cache with bootstrapper executables periodically
  taken out by the `gh-action--accum-content` action script.

    for:

      andry81-devops/bootstrappers
      andry81-cache/bootstrappers--gh-content-cache
      /gh-workflow

    bootstrapper executables to take from:

      * https://learn.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2017/install/create-an-offline-installation-of-visual-studio?view=vs-2017
        https://aka.ms/vs/15/release/vs_professional.exe
        https://aka.ms/vs/15/release/vs_enterprise.exe
        https://aka.ms/vs/15/release/vs_buildtools.exe

      * https://learn.microsoft.com/en-us/visualstudio/install/create-an-offline-installation-of-visual-studio?view=vs-2019
        https://aka.ms/vs/16/release/vs_professional.exe
        https://aka.ms/vs/16/release/vs_enterprise.exe
        https://aka.ms/vs/16/release/vs_buildtools.exe

      * https://learn.microsoft.com/en-us/visualstudio/install/create-an-offline-installation-of-visual-studio?view=vs-2022
        https://aka.ms/vs/17/release/vs_community.exe
        https://aka.ms/vs/17/release/vs_professional.exe
        https://aka.ms/vs/17/release/vs_enterprise.exe
        https://aka.ms/vs/17/release/vs_buildtools.exe

      * https://www.cygwin.com/
        https://www.cygwin.com/setup-x86_64.exe

* Implement first commit or initial files content template in the
  `gh-action--accum-gh-stats` action script to automatically insert,
  for example, basic `README.md` file into a statistic output repository.

    for:

      /github-accum-stats
      /gh-action--accum-gh-stats
      /gh-workflow

    example of a `README.md` template:

      <p align="center">
        <a href="#"><img src="https://img.shields.io/github/repo-size/{{OUTPUT_REPO_OWNER}}/{{OUTPUT_REPO}}--gh-stats?logo=github" valign="middle" alt="GitHub repo size in bytes" /></a>
      â€¢ <a href="https://github.com/XAMPPRocky/tokei"><img src="https://tokei.rs/b1/github/{{OUTPUT_REPO_OWNER}}/{{OUTPUT_REPO}}--gh-stats?category=lines" valign="middle" alt="lines of text by tokei.rs" /></a>
